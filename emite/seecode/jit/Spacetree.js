var Config={labelContainer:"label_container",levelsToShow:2,Label:{height:26,realHeight:20,width:95,realWidth:90,offsetHeight:30,offsetWidth:30},Node:{strokeStyle:"#ccb",fillStyle:"#ccb",strokeStyleInPath:"#eed",fillStyleInPath:"#ff7",mode:"fill",style:"squared"}};var Canvas=function(A){if("function"==typeof (HTMLCanvasElement)||"object"==typeof (HTMLCanvasElement)){this.canvasId=A;this.canvas=document.getElementById(this.canvasId);if((this.canvas=document.getElementById(this.canvasId))&&this.canvas.getContext){this.ctx=this.canvas.getContext("2d");this.ctx.fillStyle=Config.Node.fillStyle||"black";this.ctx.strokeStyle=Config.Node.strokeStyle||"black";this.setPosition();this.translateToCenter()}else{throw"canvas object with id "+A+" not found"}}else{throw"your browser does not support canvas. Try viewing this page with firefox, safari or opera 9.5"}};Canvas.prototype={getContext:function(){return this.ctx},makeNodeStyleSelected:function(A,B){this.ctx[B+"Style"]=(A)?Config.Node[B+"StyleInPath"]:Config.Node[B+"Style"]},makeEdgeStyleSelected:function(A){this.ctx.strokeStyle=(A)?Config.Node.strokeStyleInPath:Config.Node.strokeStyle;this.ctx.lineWidth=(A)?2:1},makeRect:function(A,B,C){if(B=="fill"||B=="stroke"){this.makeNodeStyleSelected(A,B);this.ctx[B+"Rect"](C.x1,C.y1,C.x2,C.y2)}else{throw"parameter not recognized "+B}},setPosition:function(){var A=this.canvas;var B=curtop=0;if(A.offsetParent){B=A.offsetLeft;curtop=A.offsetTop;while(A=A.offsetParent){B+=A.offsetLeft;curtop+=A.offsetTop}}this.position={x:B,y:curtop}},getPosition:function(){return this.position},clear:function(){this.ctx.clearRect(-this.getSize().x/2,-this.getSize().x/2,this.getSize().x,this.getSize().x)},clearRectangle:function(D,B,A,C){this.ctx.clearRect(C,D-2,B-C+2,Math.abs(A-D)+5)},translateToCenter:function(){this.ctx.translate(this.getSize().x/2,this.getSize().y/2)},getSize:function(){return{x:this.canvas.width,y:this.canvas.height}}};var Complex=function(){if(arguments.length>1){this.x=arguments[0];this.y=arguments[1]}else{this.x=null;this.y=null}};Complex.prototype={norm:function(){return Math.sqrt(this.squaredNorm())},squaredNorm:function(){return this.x*this.x+this.y*this.y},add:function(A){return new Complex(this.x+A.x,this.y+A.y)},prod:function(A){return new Complex(this.x*A.x-this.y*A.y,this.y*A.x+this.x*A.y)},conjugate:function(){return new Complex(this.x,-this.y)},scale:function(A){return new Complex(this.x*A,this.y*A)}};var Label=function(C,A){this.id=C.id;this.info=C.name;this.controller=A.controller;this.node=C;var B=document.getElementById(Config.labelContainer);if(!(this.labelElement=document.getElementById(this.id))){this.labelElement=document.createElement("a");this.labelElement.id=this.id;this.labelElement.href="#";this.labelElement.onclick=function(){A.onClick(C.id);return false};this.labelElement.innerHTML=C.name;B.appendChild(this.labelElement);if(A.controller&&A.controller.onCreateLabel){A.controller.onCreateLabel(this.labelElement,C)}}this.setClass("node");this.addClass("hidden");this.setDimensions()};Label.prototype={plotOn:function(B,A){if(this.fitsInCanvas(B,A)){this.setDivProperties("node",A,B)}else{this.hide()}},fitsInCanvas:function(C,A){var B=A.getSize();if(Math.abs(C.x+Config.Label.width/2)>=B.x/2||Math.abs(C.y)>=B.y/2){return false}return true},setDivProperties:function(C,D,G){var B=D.getSize();var A=D.getPosition();var E={x:Math.round(G.x+A.x+B.x/2),y:Math.round(G.y+A.y+B.y/2-Config.Label.height)};var F=this.labelElement;F.style.top=E.y+"px";F.style.left=E.x+"px";if(this.hasClass("hidden")){this.removeClass("hidden")}this.setDimensions()},addClass:function(A){if(!this.hasClass(A)){var B=this.labelElement.className.split(" ");B.push(A);this.labelElement.className=B.join(" ")}},setDimensions:function(){this.labelElement.style.width=Config.Label.realWidth+"px";this.labelElement.style.height=Config.Label.realHeight+"px";if(this.controller&&this.controller.onPlaceLabel){this.controller.onPlaceLabel(this.labelElement,this.node)}},removeClass:function(A){var D=this.labelElement.className.split(" ");var B=false;for(var C=0;C<D.length&&!B;C++){if(D[C]==A){D.splice(C,1);B=true}}this.labelElement.className=D.join(" ")},hasClass:function(A){var C=this.labelElement.className.split(" ");for(var B=0;B<C.length;B++){if(A==C[B]){return true}}return false},setClass:function(A){this.labelElement.className=A},hide:function(){this.addClass("hidden")},show:function(){this.removeClass("hidden")}};function Tree(B,C,A){this.id=B.id;this.name=B.name;this.data=B.data;this.selected=false;this._parent=C;this.draw=false;this.pos=new Complex(0,0);this.posTo=null;this._label=new Label(B,A,A.controller);this.exists=false;this.children=new Array()}Tree.prototype={getSubtree:function(C){if(this.id==C){return this}for(var B=0;B<this.children.length;B++){var A=this.children[B].getSubtree(C);if(A!=null){return A}}return null},hasChild:function(B){for(var A=0;A<this.children.length;A++){if(B==this.children[A].id){return true}}return false},addChild:function(A){this.children.push(A)},each:function(A){this.eachLevel(0,Number.MAX_VALUE,A)},eachLevel:function(E,B,D){if(E<=B){D(this,E);var C=this.children;for(var A=0;A<C.length;A++){C[A].eachLevel(E+1,B,D)}}},level:function(A,B){var D=A,C=B;this.eachLevel(0,D,function(F,E){if(E==D){C(F)}})},getLength:function(){var A=0;var C=this.children;for(var B=0;B<C.length;B++){if(C[B].exists){A++}}return A},getFirstAvailablePos:function(){for(var A=0;A<this.children.length;A++){if(this.children[A].exists){return this.children[A]}}return false},getPreviousAvailablePos:function(A){for(;A>0;A--){if(this.children[A-1].exists){return A-1}}return false},getRoot:function(){var A=this;var B=function(C){if(C._parent==null){return C}else{return B(C._parent)}};return B(A)},getLevel:function(){var A=function(B,C){if(B._parent==null){return C}else{return A(B._parent,C+1)}};return A(this,0)},getNodesFromSameLevel:function(){var C=this.getLevel();var A=this.getRoot();var B=function(D,I,H){if(H==I){return[D]}if(H<I){var E=new Array();var G=D.children;for(var F=0;F<G.length;F++){E=E.concat(B(G[F],I,H+1))}return E}else{return[]}};return B(A,C,0)},childrenExpanded:function(){var B=this.children;for(var A=0;A<B.length;A++){if(B[A].draw){return true}}return false},childrenExist:function(){var B=this.children;for(var A=0;A<B.length;A++){if(B[A].exists){return true}}return false},levelExists:function(A){var B=(A)?A:0;if(!this.childrenExist()){return B}if(this._parent==null){return 0}return this._parent.levelExists(++B)}};var Transform={orientation:"left",offsetBase:8,scale:new Array(),step:0.07,intervalObj:new Array(),hideIterationSpeed:40,showIterationSpeed:40,busy:false,Move:{time:1000,timeSlot:40,currentStep:0,N:0,n:0,deltaV:new Array(),intervalObj:null,initialTranslation:0},ajaxCalls:0};Transform.Move.N=Transform.Move.time/Transform.Move.timeSlot;var Geometry={treeFitsInCanvas:function(A,B,E){var C=B.getSize();C=(Transform.orientation=="left")?C.y:C.x;var D=Geometry.getExpandedBaseSize(A,E);return(D<C)},setRightLevelToShow:function(A,B){A.eachLevel(0,Config.levelsToShow,function(E,D){E.exists=true});A.draw=true;var C=Config.levelsToShow;while(!this.treeFitsInCanvas(A,B,C)&&C>1){A.level(C,function(D){D.draw=false;D.exists=false;D._label.hide()});C--}},getRightLevelToShow:function(A,B){var C=Config.levelsToShow;while(!this.treeFitsInCanvas(A,B,C)&&C>1){C--}return C},plotOn:function(B,C,A){if(arguments.length==1){A=true}this.plotTree(B,C,A)},getNodesToHide:function(C,D){var F=new Array();var B=C;while(B!=null){var E=B.getNodesFromSameLevel();var A=(function(H){var J=0;for(var I=0;I<H.length;I++){if(H[I].exists&&H[I].id!=B.id){F.push(H[I])}}return })(E);B=B._parent}var G=this.getRightLevelToShow(C,D);C.eachLevel(0,G,function(I,H){if(H==G&&I.exists){F.push(I)}});return F},hideNodes:function(E,B,C,A,G){var D=this.getNodesToHide(B,C);var F=new Group(D,A,C);if(E){F.setProvider(E)}F.hide(G)},plotTree:function(A,D,C){if(A.draw&&A.exists){this.plotNode(A.pos,D,A.selected);if(C){A._label.plotOn(A.pos,D)}}var F=Geometry.getEdgeBegin(A.pos);for(var E=0;E<A.children.length;E++){if(A.children[E].exists){var B=Geometry.getEdgeEnd(A.children[E].pos);if(A.children[E].draw){this.printEdge(F,B,D,A.selected&&A.children[E].selected)}this.plotTree(A.children[E],D,C)}}},plotScaledSubtree:function(A,E,C){var D=(Transform.orientation=="left")?{diffX:(A.pos.x+Config.Label.width)*(1-E),diffY:(A.pos.y-Config.Label.height/2)*(1-E)}:{diffX:(A.pos.x+Config.Label.width/2)*(1-E),diffY:A.pos.y*(1-E)};A.draw=false;var B=C.getContext();B.translate(D.diffX,D.diffY);B.scale(E,E);this.plotTree(A,C,false);A.draw=true},hideLabels:function(A){A.each(function(B){B._label.hide()})},printEdge:function(E,B,C,D){var A=C.getContext();C.makeEdgeStyleSelected(D);A.beginPath();A.moveTo(E.x,E.y);A.lineTo(B.x,B.y);A.closePath();A.stroke()},getBoundingBox:function(B){if(Transform.orientation=="left"){var A=B.pos.add(new Complex(Config.Label.realWidth,0));var C=this.calculateCorners(B,{top:null,bottom:null,right:null,left:null});A.y=C.bottom;var D=new Complex(C.right+Config.Label.width,C.top-Config.Label.height);return{lb:A,rt:D}}else{var D=B.pos.add(new Complex(0,0));var C=this.calculateCorners(B,{top:null,bottom:null,right:null,left:null});D.x=C.right+Config.Label.width;var A=new Complex(C.left,C.bottom);return{lb:A,rt:D}}},calculateCorners:function(A,B){var D=A.children;for(var C=0;C<D.length;C++){if(D[C].exists){if(B.top==null||B.top>D[C].pos.y){B.top=D[C].pos.y}if(B.bottom==null||B.bottom<D[C].pos.y){B.bottom=D[C].pos.y}if(B.right==null||B.right<D[C].pos.x){B.right=D[C].pos.x}if(B.left==null||B.left>D[C].pos.x){B.left=D[C].pos.x}B=this.calculateCorners(D[C],B)}}return B},getBaseSize:function(C,A){var B=(Transform.orientation=="left")?Config.Label.height:Config.Label.width;return(A)?(C.getLength()*B+Transform.offsetBase):this.getTreeBaseSize(C)},getTreeBaseSize:function(A){var E=(Transform.orientation=="left")?Config.Label.height:Config.Label.width;if(A.getLength()==0){return E}var D=A.children;var B=0;for(var C=0;C<D.length;C++){if(D[C].exists){B+=this.getTreeBaseSize(D[C])}}return B+Transform.offsetBase},getExpandedBaseSize:function(B,G){var F=(Transform.orientation=="left")?Config.Label.height:Config.Label.width;if(B.children.length==0||G==0){return F}var E=B.children;var C=0;var A=G-1;for(var D=0;D<E.length;D++){C+=this.getExpandedBaseSize(E[D],A)}return C+Transform.offsetBase},getAvailableBaseSize:function(C,A){var B=(Transform.orientation=="left")?Config.Label.height:Config.Label.width;return(A)?(B):this.getBaseSize(C)},getFirstPos:function(C,A){var B=(Transform.orientation=="left")?Config.Label.width+Config.Label.offsetWidth:Config.Label.height+Config.Label.offsetHeight;var D=(Transform.orientation=="left")?new Complex(C.x+B,C.y-A/2):new Complex(C.x-A/2,C.y+B);return(Transform.orientation=="left")?D.add(new Complex(0,Transform.offsetBase/2)):D.add(new Complex(Transform.offsetBase/2,0))},nextPosition:function(B,A){return(Transform.orientation=="left")?new Complex(B.x,B.y+A):new Complex(B.x+A,B.y)},getEdgeBegin:function(A){return(Transform.orientation=="left")?A.add(new Complex(Config.Label.realWidth,-Config.Label.height/2)):A.add(new Complex(Config.Label.realWidth/2,(Config.Label.realHeight-Config.Label.height)/2))},getEdgeEnd:function(A){return(Transform.orientation=="left")?A.add(new Complex(0,-Config.Label.height/2)):A.add(new Complex(Config.Label.realWidth/2,-Config.Label.realHeight))},plotNode:function(C,A,B){if(Config.Node.style=="squared"){this.plotNodeSquared(C,A,B)}else{throw"parameter not recognized "+Config.Node.style}},plotNodeSquared:function(D,B,C){var A={x1:D.x,y1:D.y-Config.Label.height+(Config.Label.height-Config.Label.realHeight)/2,x2:Config.Label.realWidth,y2:Config.Label.realHeight};B.makeRect(C,Config.Node.mode,A)}};var Group=function(C,B,A){this.array=C;this.objects=new Array();this.intervalObj=null;this.scale=null;this.provider=null;this.counter=0;this.st=B;this.canvas=A};Group.prototype={setProvider:function(A){this.provider=A},loadNodes:function(G,F){this.counter=0;var B=this,A=this.array.length,D=F;var E={};if(this.array.length>0){for(var C=0;C<A;C++){E[this.array[C].id]=this.array[C];this.provider.request(this.array[C].id,G[C],{onComplete:function(K,J){var H=ST.returnJSONTree(J,null,B.st);for(var I=0;I<H.children.length;I++){H.children[I]._parent=E[K]}E[K].children=H.children;if(++B.counter==A){if(D&&D.onComplete){D.onComplete()}}}})}}else{if(D&&D.onComplete){D.onComplete()}}},hide:function(F){this.getNodesWithChildren();if(this.array.length>0){var A=this.canvas.getContext();A.save();for(var D=0;D<this.array.length;D++){var C=this.array[D].children;for(var B=0;B<C.length;B++){Geometry.hideLabels(C[B])}}this.scale=1;var E=this;this.intervalObj=setInterval(function(){E.hideSubtrees(F)},Transform.hideIterationSpeed)}else{this.hidePost();if(F){F.onComplete()}}},show:function(F){this.getNodesWithChildren();var D=new Array();if(this.array.length>0){var A=this.canvas.getContext();for(var B=0;B<this.array.length;B++){var C=this.array[B];if(!C.childrenExpanded()){D.push(C);C.eachLevel(0,Config.levelsToShow,function(H,G){if(H.exists){H.draw=true}})}}this.array=D;A.save();this.scale=0.2;var E=this;this.intervalObj=setInterval(function(){E.showSubtrees(F)},Transform.showIterationSpeed)}else{if(F){F.onComplete()}}},getNodesWithChildren:function(){var B=new Array();for(var A=0;A<this.array.length;A++){var C=this.array[A];if(C.getLength()>0){B.push(C)}}this.array=B},hideSubtrees:function(D){var A=this.canvas.getContext();for(var B=0;B<this.array.length;B++){A.save();var C=this.array[B];var E=Geometry.getBoundingBox(C);this.canvas.clearRectangle(E.rt.y,E.rt.x,E.lb.y,E.lb.x);Geometry.plotScaledSubtree(C,this.scale,this.canvas);A.restore()}this.scale-=Transform.step;if(this.scale<=0){clearInterval(this.intervalObj);this.hidePost();A.restore();if(D){D.onComplete()}return }},hidePost:function(){for(var B=0;B<this.array.length;B++){var A=this.array[B];if(!this.provider||!this.provider.request){if(A.getLength()>0){A.each(function(C){C.draw=false;C.exists=false});A.draw=true;A.exists=true}}else{delete A.children;A.children=[]}}},showSubtrees:function(D){var A=this.canvas.getContext();for(var B=0;B<this.array.length;B++){A.save();var C=this.array[B];var E=Geometry.getBoundingBox(C);this.canvas.clearRectangle(E.rt.y,E.rt.x,E.lb.y,E.lb.x);Geometry.plotScaledSubtree(C,this.scale,this.canvas);A.restore()}this.scale+=Transform.step;if(this.scale>=1){clearInterval(this.intervalObj);A.restore();for(var B=0;B<this.array.length;B++){var C=this.array[B];var E=Geometry.getBoundingBox(C);this.canvas.clearRectangle(E.rt.y,E.rt.x,E.lb.y,E.lb.x);C.draw=false;Geometry.plotOn(C,this.canvas,true);C.draw=true}if(D){D.onComplete()}return }}};var ST=function(B,A){this.canvas=B;this.flag=true;this.tree=null;this.clickedNode=null;this.controller=A||false;this.onComplete=null;if(A&&A.onAfterComplete){this.onComplete={onComplete:function(){A.onAfterCompute()}}}};ST.returnJSONTree=function(D,E,B){var A=new Tree(D,E,B);for(var C=0;C<D.children.length;C++){A.addChild(this.returnJSONTree(D.children[C],A,B))}return A};ST.prototype={loadFromJSON:function(A){this.tree=ST.returnJSONTree(A,null,this)},loadNode:function(B,C){var D=this.getLeaves(B);var A=new Group(D.leaves,this,this.canvas);A.setProvider(this.controller);A.loadNodes(D.level,C)},getLeaves:function(A){var C=new Array(),B=new Array();A.each(function(E,D){if(D<=Config.levelsToShow&&E.draw&&(!E.children||E.children.length==0||E.getLength()==0)){C.push(E);B.push(Config.levelsToShow-D)}});return{leaves:C,level:B}},compute:function(){this.tree.eachLevel(0,1,function(A){A.draw=false;A.exists=true});this.tree.draw=true;this.tree.exists=true;this.tree.selected=true;this.calculatePositions(this.tree,new Complex(-Transform.Move.initialTranslation,0),"pos",true)},calculatePositions:function(M,E,L,G){if((M.id==this.clickedNode)&&G){this.calculatePositions(M,E,L,false);return }M[L]=E;var I=Geometry.getBaseSize(M,G);var B=Geometry.getFirstPos(E,I);if(M.getLength()>0){var F=M.getFirstAvailablePos();var K=(F)?Geometry.getAvailableBaseSize(F,G):Config.Label.height;var B=Geometry.getFirstPos(E,I-K);if(M.getLength()==1){B=Geometry.getFirstPos(E,Transform.offsetBase)}F[L]=B;this.calculatePositions(F,B,L,G);var D=M.children;for(var H=0;H<D.length;H++){if(D[H].exists&&D[H].id!=F.id){var C=0;var J=Geometry.getAvailableBaseSize(D[H],G);var A=M.getPreviousAvailablePos(H);C+=(A>=0)?(Geometry.getAvailableBaseSize(D[A],G)/2):0;C+=J/2;B=Geometry.nextPosition(B,C)}this.calculatePositions(D[H],B,L,G)}}},plot:function(A){if(arguments.length==0){A=true}Geometry.plotOn(this.tree,this.canvas,A)},setDeltaVector:function(A){A.each(function(B){if(B.exists){Transform.Move.deltaV[B.id]=B.posTo.add(B.pos.scale(-1)).scale(1.25/Transform.Move.N)}})},move:function(B){Transform.Move.n=0;var A=this;Transform.Move.intervalObj=setInterval(function(){A.moveFrameByFrame(A.tree,B)},Transform.Move.timeSlot)},moveFrameByFrame:function(A,B){if(Transform.Move.n*1.25<Transform.Move.N){this.doStep(A);this.canvas.clear();this.plot();Transform.Move.n++}else{clearInterval(Transform.Move.intervalObj);if(B&&B.onComplete){B.onComplete()}}},doStep:function(A){A.each(function(B){if(B.exists&&B.posTo){B.pos=B.pos.add(Transform.Move.deltaV[B.id])}})},showPertinentNodes:function(D){var A=this.tree.getSubtree(D);var B=new Array();A.eachLevel(0,Config.levelsToShow,function(F,E){if(!F.childrenExpanded()){B.push(F)}});var C=new Group(B,this,this.canvas);C.show({onComplete:function(){Transform.busy=false}})},translate:function(A,C,B){A.each(function(D){if(D.exists){D[B]=D[B].add(C.scale(-1))}})},selectPath:function(A){if(A==null){return }A.selected=true;this.selectPath(A._parent)},switchPosition:function(H){if(!Transform.busy){Transform.busy=true;var B=H;var G=this.tree.getSubtree(this.clickedNode);var D=this.tree;var A=this;var C=function(){return(Transform.orientation=="left")?"top":"left"};Transform.orientation=C();var F=Geometry.getNodesToHide(G,this.canvas);Transform.orientation=C();var E=new Group(F,this,this.canvas);E.hide({onComplete:function(){Transform.orientation=C();A.calculatePositions(D,new Complex(0,0),"posTo",true);Transform.busy=false;A.onClick(A.clickedNode,B)}})}},onClick:function(H){var E=this.canvas;var D=(arguments.length==2&&arguments[1].onComplete)?arguments[1]:false;var G=null;var B=this;G=(D)?{onComplete:function(){D.onComplete()}}:false;if(!Transform.busy){Transform.busy=true;this.clickedNode=H;var F=this.tree.getSubtree(H);this.tree.each(function(I){if(I.exists){I.selected=false}});this.selectPath(F);if(this.controller&&this.controller.onBeforeCompute){this.controller.onBeforeCompute(F)}var A=this;var C={onComplete:function(){Geometry.hideNodes(A.controller,F,E,B,{onComplete:function(){var J=F.levelExists();Geometry.setRightLevelToShow(F,E);var I=F.levelExists();if(J<I||(J==I&&J==0)){A.calculatePositions(A.tree,new Complex(-Transform.Move.initialTranslation,0),"posTo",true);A.translate(A.tree,F.posTo.add(new Complex(Transform.Move.initialTranslation,0)),"posTo");A.setDeltaVector(A.tree);A.move({onComplete:function(){if(G){G.onComplete()}if(B.controller&&B.controller.onAfterCompute){B.controller.onAfterCompute()}A.showPertinentNodes(H)}})}}})}};if(this.controller&&this.controller.request){this.loadNode(F,C)}else{C.onComplete()}}}};